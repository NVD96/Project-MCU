;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/13/2022
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega328P
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// SPI functions
;#include <spi.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 0020 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0021 // Declare your local variables here
; 0000 0022 
; 0000 0023 // Crystal Oscillator division factor: 1
; 0000 0024 #pragma optsize-
; 0000 0025 CLKPR=0x80;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0026 CLKPR=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0027 #ifdef _OPTIMIZE_SIZE_
; 0000 0028 #pragma optsize+
; 0000 0029 #endif
; 0000 002A 
; 0000 002B // Input/Output Ports initialization
; 0000 002C // Port B initialization
; 0000 002D // Func7=In Func6=In Func5=Out Func4=In Func3=Out Func2=Out Func1=In Func0=In
; 0000 002E // State7=T State6=T State5=0 State4=T State3=0 State2=0 State1=T State0=T
; 0000 002F PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0030 DDRB=0x2C;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0031 
; 0000 0032 // Port C initialization
; 0000 0033 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0034 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0035 PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0036 DDRC=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0037 
; 0000 0038 // Port D initialization
; 0000 0039 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003B PORTD=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003C DDRD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003D 
; 0000 003E // Timer/Counter 0 initialization
; 0000 003F // Clock source: System Clock
; 0000 0040 // Clock value: Timer 0 Stopped
; 0000 0041 // Mode: Normal top=0xFF
; 0000 0042 // OC0A output: Disconnected
; 0000 0043 // OC0B output: Disconnected
; 0000 0044 TCCR0A=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0045 TCCR0B=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0046 TCNT0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0047 OCR0A=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0048 OCR0B=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0049 
; 0000 004A // Timer/Counter 1 initialization
; 0000 004B // Clock source: System Clock
; 0000 004C // Clock value: Timer1 Stopped
; 0000 004D // Mode: Normal top=0xFFFF
; 0000 004E // OC1A output: Discon.
; 0000 004F // OC1B output: Discon.
; 0000 0050 // Noise Canceler: Off
; 0000 0051 // Input Capture on Falling Edge
; 0000 0052 // Timer1 Overflow Interrupt: Off
; 0000 0053 // Input Capture Interrupt: Off
; 0000 0054 // Compare A Match Interrupt: Off
; 0000 0055 // Compare B Match Interrupt: Off
; 0000 0056 TCCR1A=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0057 TCCR1B=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0058 TCNT1H=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0059 TCNT1L=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 005A ICR1H=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 005B ICR1L=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005C OCR1AH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005D OCR1AL=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005E OCR1BH=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005F OCR1BL=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0060 
; 0000 0061 // Timer/Counter 2 initialization
; 0000 0062 // Clock source: System Clock
; 0000 0063 // Clock value: Timer2 Stopped
; 0000 0064 // Mode: Normal top=0xFF
; 0000 0065 // OC2A output: Disconnected
; 0000 0066 // OC2B output: Disconnected
; 0000 0067 ASSR=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0068 TCCR2A=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0069 TCCR2B=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006A TCNT2=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006B OCR2A=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006C OCR2B=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006D 
; 0000 006E // External Interrupt(s) initialization
; 0000 006F // INT0: Off
; 0000 0070 // INT1: Off
; 0000 0071 // Interrupt on any change on pins PCINT0-7: Off
; 0000 0072 // Interrupt on any change on pins PCINT8-14: Off
; 0000 0073 // Interrupt on any change on pins PCINT16-23: Off
; 0000 0074 EICRA=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0075 EIMSK=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0076 PCICR=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0077 
; 0000 0078 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0079 TIMSK0=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 007A 
; 0000 007B // Timer/Counter 1 Interrupt(s) initialization
; 0000 007C TIMSK1=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 007D 
; 0000 007E // Timer/Counter 2 Interrupt(s) initialization
; 0000 007F TIMSK2=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0080 
; 0000 0081 // USART initialization
; 0000 0082 // USART disabled
; 0000 0083 UCSR0B=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0084 
; 0000 0085 // Analog Comparator initialization
; 0000 0086 // Analog Comparator: Off
; 0000 0087 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0088 ACSR=0x80;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0089 ADCSRB=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 008A DIDR1=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 008B 
; 0000 008C // ADC initialization
; 0000 008D // ADC disabled
; 0000 008E ADCSRA=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 008F 
; 0000 0090 // SPI initialization
; 0000 0091 // SPI Type: Master
; 0000 0092 // SPI Clock Rate: 2000.000 kHz
; 0000 0093 // SPI Clock Phase: Cycle Start
; 0000 0094 // SPI Clock Polarity: Low
; 0000 0095 // SPI Data Order: MSB First
; 0000 0096 SPCR=0x50;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0097 SPSR=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0098 
; 0000 0099 // TWI initialization
; 0000 009A // TWI disabled
; 0000 009B TWCR=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 009C 
; 0000 009D while (1)
;PCODE: $00000064 VOL: 0
; 0000 009E       {
; 0000 009F       // Place your code here
; 0000 00A0 
; 0000 00A1       }
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 00A2 }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
