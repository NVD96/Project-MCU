C51 COMPILER V9.01   MAIN                                                                  04/21/2022 18:02:19 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: c:\keil\c51\bin\c51.exe  main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX52.H>
   2          #include <stdio.h>
   3            sbit spi_SCK = P2^0;
   4            sbit spi_MOSI = P2^1;
   5            sbit spi_MISO = P2^2;
   6            sbit spi_CS = P2^3;   
   7          
   8          unsigned char kqua;
   9          void UARTInit();
  10          void SPIInit();
  11          void delay_ms(int tg);
  12          unsigned char SPIRead();
  13          void SPIWrite(unsigned char b);
  14          
  15          
  16          void main(){
  17   1      
  18   1        SPIInit();
  19   1        UARTInit();
  20   1        printf("Khoi tao ENC\n");
  21   1      
  22   1      
  23   1        spi_CS = 0;
  24   1        SPIWrite(0xFF); //Reset chip
  25   1        SPIWrite(0x00);
  26   1        spi_CS = 1;
  27   1       
  28   1      
  29   1        spi_CS = 0;
  30   1        SPIWrite(0x1D);       //Doc thanh ghi ESTAT
  31   1        SPIRead();
  32   1        spi_CS = 1; 
  33   1      
  34   1        spi_CS = 0;
  35   1        SPIWrite(0xBF); //Set bank
  36   1        SPIWrite(0x03);
  37   1        spi_CS = 1;
  38   1      
  39   1       
  40   1        spi_CS = 0;
  41   1        SPIWrite(0x00);       //Doc thanh ghi ESTAT
  42   1        kqua = SPIRead();
  43   1        spi_CS = 1; 
  44   1      
  45   1        printf("%X\n", kqua);
  46   1         if(kqua == 0xFA) printf("Khoi tao ENC28J60 thanh cong\n");
  47   1              else printf("Khoi tao ENC28J60 that bai\n");
  48   1        
  49   1        while(1){
  50   2        
  51   2       
  52   2        }
  53   1      
  54   1       }
  55          
C51 COMPILER V9.01   MAIN                                                                  04/21/2022 18:02:19 PAGE 2   

  56          
  57          
  58           void UARTInit(){
  59   1       
  60   1          SCON =0x52; // Port noi tiep che do 1, REN =TI =1;   {Chu y co TI khi khoi tao, code chay khong la do c
             -o TI}
  61   1              TMOD = 0x20; //Timer 1 mode 2
  62   1              TH1 = TL1 = -3; // Toc do baud la 9600
  63   1              TR1 =1;
  64   1      
  65   1       }
  66          
  67          
  68           void SPIInit(){
  69   1        
  70   1               spi_CS = 1;      //set muc cao, chuan bi set muc thap de truyen data
  71   1               spi_SCK = 0;     // set muc thap chuan bi phat xung clock
  72   1               spi_MISO = 1;   //set muc cao o chip master, san sang doc data tu slave
  73   1        }
  74          
  75           void delay_ms(int tg){
  76   1       
  77   1               int i, x;
  78   1               for(i = 0; i < tg; i++){
  79   2                      for(x = 0; x < 123; x++);
  80   2               }
  81   1       
  82   1       
  83   1       }
  84          
  85          
  86           unsigned char SPIRead(){                 //Ham doc data
  87   1        
  88   1               unsigned char i, b = 0;
  89   1               for (i = 0; i < 8; i++){       //doc ve 1 byte
  90   2               b<<=1;                    // dich byte b sang trai 1 bit 
  91   2               spi_SCK = 1;      // bat dau nhan bit dau tien
  92   2               if(spi_MISO)      //kiem tra muc tin hieu cua chan MISO 
  93   2               b|=0x01;                  // dua tin hieu bit cua chan MISO vao byte b
  94   2               spi_SCK = 0;      // ket thuc qua trinh nhan 1 bit
  95   2               
  96   2               }   
  97   1              return b;        // khi doc du 1 byte tra ve gias tri doc duoc
  98   1        }
  99          
 100            void SPIWrite(unsigned char b){
 101   1        
 102   1               unsigned char i;
 103   1               for(i = 0; i < 8; i++){  // Ghi 1 byte vao EEFROM
 104   2               if( b & 0x80)                    // So sanh de lay gia tri bit dau tien (gui bit cao truoc [bit 7]--> bit thap sau [bit
             - 1])
 105   2               spi_MOSI = 1;                    // Neu bit =1 thi chan MOSI = 1
 106   2               else 
 107   2               spi_MOSI = 0;                   // Neu bit =0 thi chan MOSI = 0
 108   2               spi_SCK = 1;                     // Bat dau ghi 1 bit
 109   2               spi_SCK =0;                      // chuan bi de gui 1 bit tiep theo
 110   2               b<<=1;                                  // Dich trai 1 bit de lay bit tiep theo
 111   2               }
 112   1        }
 113          
 114          
 115          
C51 COMPILER V9.01   MAIN                                                                  04/21/2022 18:02:19 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =     76    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
